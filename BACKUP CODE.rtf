{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # %%  <Solar> Analysis\
dfs = [WEST,MIDATL,SOUTH]\
regions = ['WEST','MIDATL','SOUTH']\
plt.figure(figsize = (25,17))\
\
for i,g in zip(range(len(dfs)) ,range(1,4) ):\
    ax = plt.subplot(3,3,g)\
    \
    X = dfs[i].drop([str(regions[i])+'_solar',str(regions[i])+'_demand',str(regions[i])+'_wind'], axis=1)\
    Y = dfs[i][str(regions[i])+'_solar']\
    X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=2, shuffle = False)\
    \
    dt = DecisionTreeRegressor(criterion = 'mse')\
    lr = LinearRegression()\
    \
    dt.fit(X_train,y_train)\
    lr.fit(X_train,y_train)\
    \
    y_1 = dt.predict(X_test)\
    y_2 = lr.predict(X_test)\
    \
    ax.plot(X_test.index.tolist(), y_test,color = 'midnightblue',label="Actual")\
    ax.plot(X_test.index.tolist(), y_1, color="red",alpha=0.5,\
              label="DT prediction", linewidth=2)\
    ax.plot(X_test.index.tolist(), y_2, color="skyblue", alpha=0.7,\
              label="Linear Reg predcition", linewidth=2)\
    ax.set_xticks(ax.get_xticks()[::2])\
    plt.legend()\
    plt.title('Solar_region : \{\}'.format(regions[i]))\
\
# %% <Wind> Analysis\
dfs = [WEST,MIDATL,SOUTH]\
regions = ['WEST','MIDATL','SOUTH']\
plt.figure(figsize = (35,25))\
for i,g in zip(range(len(dfs)) ,range(1,4) ):\
    ax = plt.subplot(3,3,g)\
    \
    X = dfs[i].drop([str(regions[i])+'_wind',str(regions[i])+'_wind',str(regions[i])+'_wind'], axis=1)\
    Y = dfs[i][str(regions[i])+'_wind']\
    \
    X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=2, shuffle = False)\
    \
    dt = DecisionTreeRegressor(criterion = 'mse')\
    lr = LinearRegression()\
    \
    dt.fit(X_train,y_train)\
    lr.fit(X_train,y_train)\
    \
    y_1 = dt.predict(X_test)\
    y_2 = lr.predict(X_test)\
    \
    \
    ax.plot(X_test.index.tolist(), y_test,color = 'midnightblue',label="Actual")\
    ax.plot(X_test.index.tolist(), y_1, color="red",alpha=0.5,\
              label="DT prediction", linewidth=2)\
    ax.plot(X_test.index.tolist(), y_2, color="skyblue", alpha=0.7,\
              label="Linear Reg predcition", linewidth=2)\
    \
    labels = ax.get_xticks()[::2]\
    ax.set_xticks(labels)\
    plt.legend()\
    plt.title('WIND_region : \{\}'.format(regions[i]))\
}